% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/platjam-ucsctracks.R
\name{parse_ucsc_gokey}
\alias{parse_ucsc_gokey}
\title{Parse UCSC tracks that use the Gokey format}
\usage{
parse_ucsc_gokey(
  track_lines,
  overlay_grep = c("[ -._](plus|minus|F|R|pos|neg)($|[ -._])"),
  priority = 5000,
  output_format = c("text", "list"),
  debug = c("none", "df"),
  verbose = FALSE,
  ...
)
}
\arguments{
\item{track_lines}{character vector containing lines read from
a track file, or valid path or connection to a track file.}

\item{overlay_grep}{character vector containing valid regular
expression patterns used to recognize when a track should
be considered an overlay coverage track. For example
\verb{track name="trackA F"} and \verb{track name="trackA R"} would
be recognized as forward and reverse strand for a track
named \code{"trackA"}. Overlay tracks are handled using the UCSC
\code{"multiWig"} approach, and not the composite track approach.
To disable overlay_grep, use \code{overlay_grep="^$"}. To enable
overlay_grep for all tracks, use \code{overlay_grep="$"}.}

\item{priority}{integer value indicating the priority to
start when assigning priority to each track.}

\item{output_format}{character string indicating the
output format, where \code{"text"} will return one long character
string, and \code{"list"} will return a \code{list} with one track
per list element with class \verb{"glue","character"}.}

\item{...}{additional arguments are ignored.}
}
\value{
by default a character string suitable to \code{cat()}
directly into a text file, when \code{output_format="text"}.
When \code{output_format="list"} it returns a
list of \code{glue} objects, which can be concatenated into
one character string with \code{Reduce("+", trackline_list)}.
}
\description{
Parse UCSC tracks that use the Gokey format
}
\details{
Given a text file, or lines from a text file, representing
the \verb{Gokey format}, this function will parse the track
lines into groups, and return a text string usable in
a UCSC genome browser track hub.

For example:

\code{parse_ucsc_gokey("tracks.txt")}
}
\seealso{
Other jam ucsc browser functions: 
\code{\link{assign_track_defaults}()},
\code{\link{get_track_defaults}()},
\code{\link{make_ucsc_trackname}()}
}
\concept{jam ucsc browser functions}
