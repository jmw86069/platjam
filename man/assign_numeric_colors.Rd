% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jam-numeric-to-colorfn.R
\name{assign_numeric_colors}
\alias{assign_numeric_colors}
\title{Assign color function to a numeric vector}
\usage{
assign_numeric_colors(
  x,
  color,
  ratio_for_zero_baseline = 3,
  lower_range_expansion = 0.2,
  base_color = "#fff6f4",
  restrict_pretty_range = TRUE,
  lens = 1,
  ...
)
}
\arguments{
\item{x}{\code{numeric} or \code{integer} vector}

\item{color}{\code{character} color}

\item{ratio_for_zero_baseline}{\code{numeric} indicating the ratio of
max to min numeric range, above which the baseline value
should include zero. This argument is intended when values
include \code{c(3, 100)} and the numeric range is more reasonable
to include zero; compared to values between \code{c(185, 192)} where
it makes more sense to apply the color gradient only near
those values, and not to use \code{c(0, 192)}.}

\item{lower_range_expansion}{\code{numeric} used when the baseline is not
zero, see \code{ratio_for_zero_baseline}, to adjust the baseline below
the lowest value by this fraction of the span of values (max - min)
below the lowest value. The intention is to prevent assigning
white \code{base_color} to this lowest value, instead it should use
a very pale variant of \code{color}.}

\item{base_color}{\code{character} string used as the baseline color when
defining a color gradient to \code{color}. This value is passed to
\code{jamba::getColorRamp(..., defaultBaseColor)}.}

\item{restrict_pretty_range}{\code{logical} indicating whether the values
returned by \code{pretty()} should be filtered by \code{range(x)}, excluding
any numeric breaks outside that range. The practical effect is that
it reduces labels displayed by \code{jamba::showColors()} or by color
legends drawn by \code{ComplexHeatmap::Heatmap()}.}

\item{lens}{\code{numeric} value that defines the intensity of color gradient,
with higher values increasing the rate of increase in color intensity,
and negative values decreasing this rate. This argument is passed
to \code{jamba::getColorRamp()}.}

\item{...}{additional arguments are ignored.}
}
\description{
Assign color function to a numeric vector
}
\details{
This function is called internally by \code{design2colors()}.
}
